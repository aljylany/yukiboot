"""
ูุธุงู ุงููุณุชููุงุช ุงูููุญุฏ
Unified Level System
"""

import logging
from database.operations import execute_query
from config.hierarchy import MASTERS

async def get_unified_user_level(user_id: int):
    """
    ุงูุญุตูู ุนูู ูุณุชูู ุงููุณุชุฎุฏู ูู ุงููุธุงู ุงูููุญุฏ
    Returns: dict with level, xp, level_name, world_name
    """
    try:
        # ุงูุชุญูู ูู ููู ุงููุณุชุฎุฏู ูู ุงูุฃุณูุงุฏ
        is_master = user_id in MASTERS
        
        if is_master:
            return {
                'level': 1000,
                'xp': 100000,
                'level_name': 'ุณูุฏ ุงููุทูู',
                'world_name': 'ุงูุนุงูู ุงูุณูุงุฏู ุงููุทูู',
                'is_master': True
            }
        
        # ุงูุจุญุซ ูู ุฌุฏูู ุงููุณุชููุงุช ุงูุฌุฏูุฏ
        level_data = await execute_query(
            "SELECT xp, level_name, world_name FROM levels WHERE user_id = ?",
            (user_id,),
            fetch_one=True
        )
        
        if level_data:
            if isinstance(level_data, tuple):
                xp = level_data[0] if len(level_data) > 0 else 0
                level_name = level_data[1] if len(level_data) > 1 else 'ูุฌู 1'
                world_name = level_data[2] if len(level_data) > 2 else 'ุนุงูู ุงููุฌูู'
            else:
                xp = level_data.get('xp', 0)
                level_name = level_data.get('level_name', 'ูุฌู 1')
                world_name = level_data.get('world_name', 'ุนุงูู ุงููุฌูู')
            
            # ุญุณุงุจ ุงููุณุชูู ูู XP
            if xp >= 30000:
                level = 1000
            elif xp >= 15000:
                level = 500
            elif xp >= 7000:
                level = 100
            elif xp >= 3000:
                level = 50
            elif xp >= 1000:
                level = 25
            else:
                level = max(1, xp // 100)
                
            return {
                'level': level,
                'xp': xp,
                'level_name': level_name,
                'world_name': world_name,
                'is_master': False
            }
        else:
            # ูุณุชุฎุฏู ุฌุฏูุฏ
            return {
                'level': 1,
                'xp': 0,
                'level_name': 'ูุฌู 1',
                'world_name': 'ุนุงูู ุงููุฌูู',
                'is_master': False
            }
            
    except Exception as e:
        logging.error(f"ุฎุทุฃ ูู ุงูุญุตูู ุนูู ูุณุชูู ุงููุณุชุฎุฏู: {e}")
        return {
            'level': 1,
            'xp': 0,
            'level_name': 'ูุฌู 1',
            'world_name': 'ุนุงูู ุงููุฌูู',
            'is_master': False
        }


async def show_unified_user_info(message, user_id):
    """ุนุฑุถ ูุนูููุงุช ุงููุณุชุฎุฏู ูุน ุงููุธุงู ุงูููุญุฏ"""
    try:
        from database.operations import get_user
        from utils.helpers import format_number
        
        # ุงูุญุตูู ุนูู ูุนูููุงุช ุงููุณุชุฎุฏู ุงูุฃุณุงุณูุฉ
        user = await get_user(user_id)
        if not user:
            return "โ ุงููุณุชุฎุฏู ุบูุฑ ูุณุฌู ูู ุงููุธุงู"
        
        # ุงูุญุตูู ุนูู ูุนูููุงุช ุงููุณุชูู ุงูููุญุฏุฉ
        level_info = await get_unified_user_level(user_id)
        
        # ูุนูููุงุช ุฃุณุงุณูุฉ
        username = message.from_user.username or "ุบูุฑ ูุญุฏุฏ"
        balance = user.get('balance', 0) if isinstance(user, dict) else 0
        bank_balance = user.get('bank_balance', 0) if isinstance(user, dict) else 0
        bank_type = user.get('bank_type', 'ุงูุฃููู') if isinstance(user, dict) else 'ุงูุฃููู'
        
        # ุชุญุฏูุฏ ุงูุชุตููู
        if level_info['is_master']:
            user_type = "ุณูุฏ ูุทูู"
            type_emoji = "๐"
        elif level_info['level'] >= 100:
            user_type = "ูุงุนุจ ุฃุณุทูุฑู"
            type_emoji = "๐ฅ"
        elif level_info['level'] >= 50:
            user_type = "ูุงุนุจ ูุญุชุฑู"
            type_emoji = "โญ"
        elif level_info['level'] >= 25:
            user_type = "ูุงุนุจ ูุชูุฏู"
            type_emoji = "๐ฏ"
        else:
            user_type = "ูุงุนุจ ุนุงุฏู"
            type_emoji = "๐ค"
        
        # ุจูุงุก ุงูุฑุณุงูุฉ
        user_name = message.from_user.first_name or "ุงููุณุชุฎุฏู"
        info_text = f"""๐ค **ุญุณุงุจ {user_name}**

๐ **ุงููุนูููุงุช ุงูุฃุณุงุณูุฉ:**
โข ๐ ุงูุฑูู ุงูุชุนุฑููู: {user_id}
โข ๐ ุงุณู ุงููุณุชุฎุฏู: @{username}
โข {type_emoji} ุงูุชุตููู: {user_type}
โข ๐ ุงููุณุชูู: {level_info['level']}
โข โญ ููุงุท ุงูุฎุจุฑุฉ: {format_number(level_info['xp'])}
โข ๐ ุงูุนุงูู: {level_info['world_name']}
โข ๐ญ ุงูุฑุชุจุฉ: {level_info['level_name']}

๐ฐ **ุงููุถุน ุงููุงูู:**
โข ๐ต ุงูุฑุตูุฏ ุงูุญุงูู: {format_number(balance)}$
โข ๐ฆ ุฑุตูุฏ ุงูุจูู: {format_number(bank_balance)}$
โข ๐๏ธ ููุน ุงูุจูู: {bank_type}

๐ **ุงููููุฉ ุงูุฅุฌูุงููุฉ:**
{format_number(balance + bank_balance)}$"""

        return info_text
        
    except Exception as e:
        logging.error(f"ุฎุทุฃ ูู ุนุฑุถ ูุนูููุงุช ุงููุณุชุฎุฏู ุงูููุญุฏุฉ: {e}")
        return "โ ุญุฏุซ ุฎุทุฃ ูู ุนุฑุถ ุงููุนูููุงุช"